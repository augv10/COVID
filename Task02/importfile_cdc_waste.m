function [wwtp_jurisdiction, wwtp_id, reporting_jurisdiction, sample_location, ...
    sample_location_specify, key_plot_id, county_names, county_fips, population_served, ...
    date_start, date_end, ptc_15d, detect_prop_15d, percentile, sampling_prior, first_sample_date] = ...
    importfile_cdc_waste(filename, dataLines)
    %IMPORTFILE Import data from a text file
    %  [WWTP_JURISDICTION, WWTP_ID, REPORTING_JURISDICTION, SAMPLE_LOCATION,
    %  SAMPLE_LOCATION_SPECIFY, KEY_PLOT_ID, COUNTY_NAMES, COUNTY_FIPS,
    %  POPULATION_SERVED, DATE_START, DATE_END, PTC_15D, DETECT_PROP_15D,
    %  PERCENTILE, SAMPLING_PRIOR, FIRST_SAMPLE_DATE] = IMPORTFILE(FILENAME)
    %  reads data from text file FILENAME for the default selection.
    %  Returns the data as column vectors.
    %
    %  [WWTP_JURISDICTION, WWTP_ID, REPORTING_JURISDICTION, SAMPLE_LOCATION,
    %  SAMPLE_LOCATION_SPECIFY, KEY_PLOT_ID, COUNTY_NAMES, COUNTY_FIPS,
    %  POPULATION_SERVED, DATE_START, DATE_END, PTC_15D, DETECT_PROP_15D,
    %  PERCENTILE, SAMPLING_PRIOR, FIRST_SAMPLE_DATE] = IMPORTFILE(FILE,
    %  DATALINES) reads data for the specified row interval(s) of text file
    %  FILENAME. Specify DATALINES as a positive scalar integer or a N-by-2
    %  array of positive scalar integers for dis-contiguous row intervals.
    %
    %  Example:
    %  [wwtp_jurisdiction, wwtp_id, reporting_jurisdiction, sample_location, sample_location_specify, key_plot_id, county_names, county_fips, population_served, date_start, date_end, ptc_15d, detect_prop_15d, percentile, sampling_prior, first_sample_date] = importfile("D:\DATA\CDC\NWSS_Public_SARS-CoV-2_Wastewater_Metric_Data_20240303.csv", [2, Inf]);
    %
    %  See also READTABLE.
    %
    % Auto-generated by MATLAB on 03-Mar-2024 10:23:49
    
    %% Input handling
    
    % If dataLines is not specified, define defaults
    if nargin < 2
        dataLines = [2, Inf];
    end
    
    %% Set up the Import Options and import the data
    opts = delimitedTextImportOptions("NumVariables", 16);
    
    % Specify range and delimiter
    opts.DataLines = dataLines;
    opts.Delimiter = ",";
    
    % Specify column names and types
    opts.VariableNames = ["wwtp_jurisdiction", "wwtp_id", "reporting_jurisdiction", "sample_location", "sample_location_specify", "key_plot_id", "county_names", "county_fips", "population_served", "date_start", "date_end", "ptc_15d", "detect_prop_15d", "percentile", "sampling_prior", "first_sample_date"];
    opts.VariableTypes = ["categorical", "double", "categorical", "categorical", "string", "double", "categorical", "string", "double", "datetime", "datetime", "double", "double", "double", "categorical", "datetime"];
    
    % Specify file level properties
    opts.ImportErrorRule = "error";
    opts.ExtraColumnsRule = "ignore";
    opts.EmptyLineRule = "read";
    
    % Specify variable properties
    opts = setvaropts(opts, ["sample_location_specify", "county_fips"], "WhitespaceRule", "preserve");
    opts = setvaropts(opts, ["wwtp_jurisdiction", "reporting_jurisdiction", "sample_location", "sample_location_specify", "county_names", "county_fips", "sampling_prior"], "EmptyFieldRule", "auto");
    opts = setvaropts(opts, "date_start", "InputFormat", "yyyy-MM-dd");
    opts = setvaropts(opts, "date_end", "InputFormat", "yyyy-MM-dd");
    opts = setvaropts(opts, "first_sample_date", "InputFormat", "yyyy-MM-dd");
    opts = setvaropts(opts, "key_plot_id", "TrimNonNumeric", true);
    opts = setvaropts(opts, "key_plot_id", "ThousandsSeparator", ",");
    
    % Import the data
    tbl = readtable(filename, opts);
    
    %% Convert to output type
    wwtp_jurisdiction = tbl.wwtp_jurisdiction;
    wwtp_id = tbl.wwtp_id;
    reporting_jurisdiction = tbl.reporting_jurisdiction;
    sample_location = tbl.sample_location;
    sample_location_specify = tbl.sample_location_specify;
    key_plot_id = tbl.key_plot_id;
    county_names = tbl.county_names;
    county_fips = tbl.county_fips;
    population_served = tbl.population_served;
    date_start = tbl.date_start;
    date_end = tbl.date_end;
    ptc_15d = tbl.ptc_15d;
    detect_prop_15d = tbl.detect_prop_15d;
    percentile = tbl.percentile;
    sampling_prior = tbl.sampling_prior;
    first_sample_date = tbl.first_sample_date;
    end